#ifndef __DOMETER_H
#define __DOMETER_H

/* Includes ------------------------------------------------------------------*/
#include "stm32f0xx_karlboard.h"
#include "oled.h"
#include "CRC16.h"
#include "rs485.h"
#include "main.h"
#define DOMETER_FC						0x03
#define DOMeterAddr						0x00
#define DOMeterTO							0x05
//CMD BUF OFF
#define DOMETER_ADDR_OFF			0
#define DOMETER_FC_OFF				DOMETER_ADDR_OFF+1		//1
#define DOMETER_OFFSET_OFF		DOMETER_FC_OFF+1			//2
#define DOMETER_DATACNT_OFF		DOMETER_OFFSET_OFF+2	//4
#define DOMETER_CRCLEN_OFF		DOMETER_DATACNT_OFF+2	//6
//DATA BUF OFF
#define DOMETER_DATALEN_OFF		DOMETER_ADDR_OFF+2		//2
#define DOMETER_DATA_OFF			DOMETER_DATALEN_OFF+1	//3
#define DOMETER_SCRCLEN_OFF		DOMETER_DATA_OFF+2		//5
#define DOMETER_DCRCLEN_OFF		DOMETER_DATA_OFF+4		//7
//BUF SIZE
#define DOMETER_CMDBUF_SIZE		DOMETER_CRCLEN_OFF+2	//8
#define DOMETER_DATABUF_SIZE	DOMETER_DCRCLEN_OFF+2	//9
//PH CMD
#define DOMETER_PH_OFFSET			0x0000
#define DOMETER_PH_DATACNT		0x0001
#define DOMETER_PH_DATALEN		0x02
//T CMD
#define DOMETER_T_OFFSET			0x0001
#define DOMETER_T_DATACNT			0x0001
#define DOMETER_T_DATALEN			0x02
//PHT CMD
#define DOMETER_PHT_OFFSET		DOMETER_PH_OFFSET
#define DOMETER_PHT_DATACNT		DOMETER_PH_DATACNT+DOMETER_T_DATACNT
#define DOMETER_PHT_DATALEN		DOMETER_PH_DATALEN+DOMETER_T_DATALEN
//ORP CMD
#define DOMETER_ORP_OFFSET			0x0002
#define DOMETER_ORP_DATACNT			0x0001
#define DOMETER_ORP_DATALEN			0x02
//TORP CMD
#define DOMETER_TORP_OFFSET			DOMETER_T_OFFSET
#define DOMETER_TORP_DATACNT		DOMETER_T_DATACNT+DOMETER_ORP_DATACNT
#define DOMETER_TORP_DATALEN		DOMETER_T_DATALEN+DOMETER_ORP_DATALEN
//DOMETER REGISTER
#define DOMETER_PH_PEND					0x01
#define DOMETER_T_PEND					0x02
#define DOMETER_PHT_PEND				0x04
#define DOMETER_ORP_PEND				0x08
#define DOMETER_ORPT_PEND				0x10

#define DOMETER_RBUF_UPDATE			0x80

//display
#define	X_LEN		43
#define	Y_LEN		1
//L1
#define DOMETER_DISP_TITAL_X				0
#define DOMETER_DISP_TITAL_Y				0

#define DOMETER_DISP_CODE_X					DOMETER_DISP_TITAL_X+X_LEN*2
#define DOMETER_DISP_CODE_Y					DOMETER_DISP_TITAL_Y
//L2
#define DOMETER_DISP_ITEM_X					DOMETER_DISP_TITAL_X
#define DOMETER_DISP_ITEM_Y					DOMETER_DISP_TITAL_Y+2

#define DOMETER_DISP_VALUE_X				DOMETER_DISP_ITEM_X+X_LEN
#define DOMETER_DISP_VALUE_Y				DOMETER_DISP_ITEM_Y

#define DOMETER_DISP_THRESHOLD_X		DOMETER_DISP_VALUE_X+X_LEN
#define DOMETER_DISP_THRESHOLD_Y		DOMETER_DISP_ITEM_Y
//L3	PH
#define DOMETER_DISP_PH_X						DOMETER_DISP_ITEM_X
#define DOMETER_DISP_PH_Y						DOMETER_DISP_ITEM_Y+Y_LEN

#define DOMETER_DISP_PHVALUE_X			DOMETER_DISP_VALUE_X
#define DOMETER_DISP_PHVALUE_Y			DOMETER_DISP_PH_Y

#define DOMETER_DISP_PHTHRESHOLD_X	DOMETER_DISP_THRESHOLD_X
#define DOMETER_DISP_PHTHRESHOLD_Y	DOMETER_DISP_PH_Y
//L4	T
#define DOMETER_DISP_T_X						DOMETER_DISP_ITEM_X
#define DOMETER_DISP_T_Y						DOMETER_DISP_PH_Y+Y_LEN

#define DOMETER_DISP_TVALUE_X				DOMETER_DISP_VALUE_X
#define DOMETER_DISP_TVALUE_Y				DOMETER_DISP_T_Y

#define DOMETER_DISP_TTHRESHOLD_X		DOMETER_DISP_THRESHOLD_X
#define DOMETER_DISP_TTHRESHOLD_Y		DOMETER_DISP_T_Y
//L5	ORP
#define DOMETER_DISP_ORP_X					DOMETER_DISP_ITEM_X
#define DOMETER_DISP_ORP_Y					DOMETER_DISP_T_Y+Y_LEN

#define DOMETER_DISP_ORPVALUE_X			DOMETER_DISP_VALUE_X
#define DOMETER_DISP_ORPVALUE_Y			DOMETER_DISP_ORP_Y

#define DOMETER_DISP_ORPTHRESHOLD_X	DOMETER_DISP_THRESHOLD_X
#define DOMETER_DISP_ORPTHRESHOLD_Y	DOMETER_DISP_ORP_Y

#define DOMETER_RBUF_UPDATE			0x80


extern uint16_t	PHData;
extern uint16_t	TData;
extern uint16_t	ORPData;
extern uint16_t	PHThreshold;
extern uint16_t	TThreshold;
extern uint16_t	ORPThreshold;
extern uint16_t	DOMeterCode;
extern uint8_t DOMeterDataBuf[];
extern uint8_t DOMeterReg;
void DOMeterCheck(void);
void DOMeterDisplay(void);
#endif /* __DOMETER_H */